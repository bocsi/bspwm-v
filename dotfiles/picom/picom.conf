#################################
#             Shadows           #
#################################
#
shadow = false;
#################################
#           Fading              #
#################################

fading = true;
fade-delta = 10;
no-fading-openclose = false;

#################################
#   Transparency / Opacity      #
#################################

inactive-opacity = 1;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
frame-opacity = 1

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)

active-opacity = 1.0
opacity-rule = [
  "90:class_g = 'URxvt' && focused",
  "70:class_g = 'URxvt' && !focused",
  "90:class_g = 'Rofi'"  
];


#################################
#           Corners             #
#################################

corner-radius = 10;

# Exclude conditions for rounded corners.
rounded-corners-exclude = [ 
  "class_g = 'Blueman-tray'",
  "class_g = 'Polybar'",
  "class_g = 'flameshot'",
  "window_type = 'dock'"
];


#################################
#     Background-Blurring       #
#################################

#blur-background = false;
blur-method = "dual_kawase";
blur-strength = 6;
blur-background-frame = false;
# Exclude conditions for background blur.
# blur-background-exclude = []
blur-background-exclude = [
  "window_type = 'dock'"
];

#################################
#       General Settings        #
#################################

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#

backend = "glx";

# Enable/disable VSync.
# vsync = false
vsync = true;

mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
detect-rounded-corners = true;

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.

detect-client-opacity = true;
# detect-transient = false
detect-transient = true;
glx-no-stencil = true

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes,
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
glx-no-rebind-pixmap = false

# Disable the use of damage information.
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
use-damage = false;

log-level = "warn";

wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};
